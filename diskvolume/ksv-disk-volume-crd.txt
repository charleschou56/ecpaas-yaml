mars@charles-ksp-master:~$ kubectl get crd diskvolumes.virtualization.kubesphere.io -o yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"(devel)"},"creationTimestamp":null,"name":"diskvolumes.virtualization.kubesphere.io"},"spec":{"group":"virtualization.kubesphere.io","names":{"kind":"DiskVolume","listKind":"DiskVolumeList","plural":"diskvolumes","singular":"diskvolume"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"DiskVolume is a specification for a DiskVolume resource","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"DiskVolumeSpec is the spec for a DiskVolume resource","properties":{"pvcName":{"type":"string"},"resources":{"description":"Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources","properties":{"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"source":{"description":"Source is the src of the data for the requested DiskVolume","properties":{"blank":{"description":"VolumeBlankImage provides the parameters to create a new raw blank DiskVolume","type":"object"},"disk":{"description":"VolumeSourceDisk provides the parameters to create a DiskVolume by exist DiskVolume","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"image":{"description":"VolumeSourceImage provides the parameters to create a DiskVolume by image","properties":{"name":{"type":"string"},"namespace":{"type":"string"}},"required":["name"],"type":"object"},"snap":{"description":"VolumeSourceSnap provides the parameters to create a DiskVolume from an existing snapshot","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"}},"type":"object"}},"required":["source"],"type":"object"},"status":{"description":"DiskVolume is the status for a DiskVolume resource","properties":{"created":{"description":"Created indicates if the pvc is created in the cluster","type":"boolean"},"owner":{"description":"Describe which vm the disk mount","type":"string"},"ready":{"description":"Ready indicates if pvc is bound","type":"boolean"},"target":{"description":"Describe the relationship between disk and device","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
  creationTimestamp: "2022-12-29T07:21:39Z"
  generation: 1
  name: diskvolumes.virtualization.kubesphere.io
  resourceVersion: "3935"
  uid: 375a9acc-3cb1-48ec-9e55-ada99ce2d582
spec:
  conversion:
    strategy: None
  group: virtualization.kubesphere.io
  names:
    kind: DiskVolume
    listKind: DiskVolumeList
    plural: diskvolumes
    singular: diskvolume
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DiskVolume is a specification for a DiskVolume resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DiskVolumeSpec is the spec for a DiskVolume resource
            properties:
              pvcName:
                type: string
              resources:
                description: 'Resources represents the minimum resources the volume
                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              source:
                description: Source is the src of the data for the requested DiskVolume
                properties:
                  blank:
                    description: VolumeBlankImage provides the parameters to create
                      a new raw blank DiskVolume
                    type: object
                  disk:
                    description: VolumeSourceDisk provides the parameters to create
                      a DiskVolume by exist DiskVolume
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  image:
                    description: VolumeSourceImage provides the parameters to create
                      a DiskVolume by image
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                  snap:
                    description: VolumeSourceSnap provides the parameters to create
                      a DiskVolume from an existing snapshot
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                type: object
            required:
            - source
            type: object
          status:
            description: DiskVolume is the status for a DiskVolume resource
            properties:
              created:
                description: Created indicates if the pvc is created in the cluster
                type: boolean
              owner:
                description: Describe which vm the disk mount
                type: string
              ready:
                description: Ready indicates if pvc is bound
                type: boolean
              target:
                description: Describe the relationship between disk and device
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: DiskVolume
    listKind: DiskVolumeList
    plural: diskvolumes
    singular: diskvolume
  conditions:
  - lastTransitionTime: "2022-12-29T07:21:39Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2022-12-29T07:21:39Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
